"""remove username column

Revision ID: b0240709d3a1
Revises: 33746c69cf70
Create Date: 2025-08-08 20:28:06.356220

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "b0240709d3a1"
down_revision: Union[str, Sequence[str], None] = "33746c69cf70"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("account", sa.Column("email", sa.String(), nullable=False))
    op.drop_constraint(op.f("account_username_key"), "account", type_="unique")
    op.create_unique_constraint(op.f("account_email_key"), "account", ["email"])
    op.drop_column("account", "username")
    op.drop_constraint(op.f("librarian_email_key"), "librarian", type_="unique")
    op.drop_column("librarian", "email")
    op.drop_constraint(op.f("member_email_key"), "member", type_="unique")
    op.drop_column("member", "email")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "member", sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.create_unique_constraint(
        op.f("member_email_key"),
        "member",
        ["email"],
        postgresql_nulls_not_distinct=False,
    )
    op.add_column(
        "librarian",
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.create_unique_constraint(
        op.f("librarian_email_key"),
        "librarian",
        ["email"],
        postgresql_nulls_not_distinct=False,
    )
    op.add_column(
        "account",
        sa.Column("username", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(op.f("account_email_key"), "account", type_="unique")
    op.create_unique_constraint(
        op.f("account_username_key"),
        "account",
        ["username"],
        postgresql_nulls_not_distinct=False,
    )
    op.drop_column("account", "email")
    # ### end Alembic commands ###
